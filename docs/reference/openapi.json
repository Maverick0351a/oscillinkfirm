{
  "components": {
    "schemas": {
      "AdminKeyResponse": {
        "properties": {
          "api_key": {
            "title": "Api Key",
            "type": "string"
          },
          "created_at": {
            "title": "Created At",
            "type": "number"
          },
          "features": {
            "additionalProperties": {
              "type": "boolean"
            },
            "default": {},
            "title": "Features",
            "type": "object"
          },
          "quota_limit_units": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quota Limit Units"
          },
          "quota_window_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quota Window Seconds"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "tier": {
            "title": "Tier",
            "type": "string"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "number"
          }
        },
        "required": [
          "api_key",
          "tier",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "AdminKeyResponse",
        "type": "object"
      },
      "AdminKeyUpdate": {
        "properties": {
          "features": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "boolean"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "quota_limit_units": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quota Limit Units"
          },
          "quota_window_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quota Window Seconds"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tier"
          }
        },
        "title": "AdminKeyUpdate",
        "type": "object"
      },
      "AutoCorrectRequest": {
        "properties": {
          "custom_preserve": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Preserve"
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "AutoCorrectRequest",
        "type": "object"
      },
      "AutoCorrectResponse": {
        "properties": {
          "corrected": {
            "title": "Corrected",
            "type": "string"
          },
          "meta": {
            "title": "Meta",
            "type": "object"
          }
        },
        "required": [
          "corrected",
          "meta"
        ],
        "title": "AutoCorrectResponse",
        "type": "object"
      },
      "Body_api_ingest_v1_ingest_post": {
        "properties": {
          "embed_model": {
            "default": "bge-small-en-v1.5",
            "title": "Embed Model",
            "type": "string"
          },
          "index_out": {
            "title": "Index Out",
            "type": "string"
          },
          "input_path": {
            "title": "Input Path",
            "type": "string"
          }
        },
        "required": [
          "input_path",
          "index_out"
        ],
        "title": "Body_api_ingest_v1_ingest_post",
        "type": "object"
      },
      "Body_api_query_v1_query_post": {
        "properties": {
          "bundle_k": {
            "default": 5,
            "title": "Bundle K",
            "type": "integer"
          },
          "embed_model": {
            "default": "bge-small-en-v1.5",
            "title": "Embed Model",
            "type": "string"
          },
          "index_path": {
            "title": "Index Path",
            "type": "string"
          },
          "kneighbors": {
            "default": 6,
            "title": "Kneighbors",
            "type": "integer"
          },
          "lamC": {
            "default": 0.5,
            "title": "Lamc",
            "type": "number"
          },
          "lamP": {
            "default": 0.0,
            "title": "Lamp",
            "type": "number"
          },
          "lamQ": {
            "default": 4.0,
            "title": "Lamq",
            "type": "number"
          },
          "q": {
            "title": "Q",
            "type": "string"
          },
          "tol": {
            "default": 0.001,
            "title": "Tol",
            "type": "number"
          }
        },
        "required": [
          "index_path",
          "q"
        ],
        "title": "Body_api_query_v1_query_post",
        "type": "object"
      },
      "CompetitorBenchPayload": {
        "properties": {
          "ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ids"
          },
          "k": {
            "default": 5,
            "title": "K",
            "type": "integer"
          },
          "kneighbors": {
            "default": 6,
            "title": "Kneighbors",
            "type": "integer"
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "lamC": {
            "default": 0.5,
            "title": "Lamc",
            "type": "number"
          },
          "lamG": {
            "default": 1.0,
            "title": "Lamg",
            "type": "number"
          },
          "lamQ": {
            "default": 4.0,
            "title": "Lamq",
            "type": "number"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "query_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Index"
          },
          "smart_correct": {
            "default": false,
            "title": "Smart Correct",
            "type": "boolean"
          },
          "texts": {
            "items": {
              "type": "string"
            },
            "title": "Texts",
            "type": "array"
          },
          "traps": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traps"
          },
          "tune": {
            "default": false,
            "title": "Tune",
            "type": "boolean"
          },
          "tune_trials": {
            "default": 8,
            "title": "Tune Trials",
            "type": "integer"
          }
        },
        "required": [
          "texts"
        ],
        "title": "CompetitorBenchPayload",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "default": "ok",
            "title": "Status",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "title": "HealthResponse",
        "type": "object"
      },
      "Params": {
        "properties": {
          "deterministic_k": {
            "default": false,
            "title": "Deterministic K",
            "type": "boolean"
          },
          "kneighbors": {
            "default": 6,
            "title": "Kneighbors",
            "type": "integer"
          },
          "lamC": {
            "default": 0.5,
            "title": "Lamc",
            "type": "number"
          },
          "lamG": {
            "default": 1.0,
            "title": "Lamg",
            "type": "number"
          },
          "lamP": {
            "default": 0.0,
            "title": "Lamp",
            "type": "number"
          },
          "lamQ": {
            "default": 4.0,
            "title": "Lamq",
            "type": "number"
          },
          "neighbor_seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Neighbor Seed"
          }
        },
        "title": "Params",
        "type": "object"
      },
      "ReceiptResponse": {
        "properties": {
          "bundle": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle"
          },
          "meta": {
            "title": "Meta",
            "type": "object"
          },
          "receipt": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Receipt"
          },
          "state_sig": {
            "title": "State Sig",
            "type": "string"
          },
          "timings_ms": {
            "title": "Timings Ms",
            "type": "object"
          }
        },
        "required": [
          "state_sig",
          "timings_ms",
          "meta"
        ],
        "title": "ReceiptResponse",
        "type": "object"
      },
      "SettleOptions": {
        "properties": {
          "bundle_k": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bundle K"
          },
          "dt": {
            "default": 1.0,
            "title": "Dt",
            "type": "number"
          },
          "include_receipt": {
            "default": true,
            "title": "Include Receipt",
            "type": "boolean"
          },
          "max_iters": {
            "default": 12,
            "title": "Max Iters",
            "type": "integer"
          },
          "tol": {
            "default": 0.001,
            "title": "Tol",
            "type": "number"
          }
        },
        "title": "SettleOptions",
        "type": "object"
      },
      "SettleRequest": {
        "properties": {
          "Y": {
            "description": "Matrix N x D (list of rows)",
            "items": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "title": "Y",
            "type": "array"
          },
          "chain": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chain"
          },
          "gates": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gates"
          },
          "options": {
            "$ref": "#/components/schemas/SettleOptions",
            "default": {
              "dt": 1.0,
              "include_receipt": true,
              "max_iters": 12,
              "tol": 0.001
            }
          },
          "params": {
            "$ref": "#/components/schemas/Params",
            "default": {
              "deterministic_k": false,
              "kneighbors": 6,
              "lamC": 0.5,
              "lamG": 1.0,
              "lamP": 0.0,
              "lamQ": 4.0
            }
          },
          "psi": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Psi"
          }
        },
        "required": [
          "Y"
        ],
        "title": "SettleRequest",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Oscillink Cloud API",
    "version": "0.1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/admin/billing/cancel/{api_key}": {
      "post": {
        "operationId": "admin_cancel_subscription_admin_billing_cancel__api_key__post",
        "parameters": [
          {
            "in": "path",
            "name": "api_key",
            "required": true,
            "schema": {
              "title": "Api Key",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "immediate",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Immediate"
            }
          },
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin Cancel Subscription"
      }
    },
    "/admin/billing/price-map": {
      "get": {
        "operationId": "admin_get_price_map_admin_billing_price_map_get",
        "parameters": [
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin Get Price Map"
      }
    },
    "/admin/introspect": {
      "get": {
        "description": "Return effective entitlements, limits, and feature overlays for operators.\n\nThis endpoint is read-only and intended for debugging licensed-container deployments.\nIt aggregates:\n- License status (from exported entitlements JSON if present)\n- Effective limits from environment (max nodes/dim, global rate limit, per-key quota defaults,\n  monthly cap override, IP and endpoint rate-limit knobs)\n- Feature overlay env flags (OSCILLINK_FEAT_*)\n- API key config mode (env list present and keystore backend)",
        "operationId": "admin_introspect_admin_introspect_get",
        "parameters": [
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin Introspect"
      }
    },
    "/admin/keys/{api_key}": {
      "get": {
        "operationId": "admin_get_key_admin_keys__api_key__get",
        "parameters": [
          {
            "in": "path",
            "name": "api_key",
            "required": true,
            "schema": {
              "title": "Api Key",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminKeyResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin Get Key"
      },
      "put": {
        "operationId": "admin_put_key_admin_keys__api_key__put",
        "parameters": [
          {
            "in": "path",
            "name": "api_key",
            "required": true,
            "schema": {
              "title": "Api Key",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminKeyUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminKeyResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin Put Key"
      }
    },
    "/admin/usage/{api_key}": {
      "get": {
        "operationId": "admin_get_usage_admin_usage__api_key__get",
        "parameters": [
          {
            "in": "path",
            "name": "api_key",
            "required": true,
            "schema": {
              "title": "Api Key",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin Get Usage"
      }
    },
    "/admin/webhook/events": {
      "get": {
        "operationId": "admin_list_webhook_events_admin_webhook_events_get",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 50,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Admin List Webhook Events"
      }
    },
    "/billing/cli/poll/{code}": {
      "get": {
        "description": "Poll the status of a CLI signup session and return the API key when ready.",
        "operationId": "billing_cli_poll_billing_cli_poll__code__get",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Billing Cli Poll"
      }
    },
    "/billing/cli/start": {
      "post": {
        "description": "Start a CLI signup session and return a Checkout URL plus a short code.\n\nThe user completes checkout in a browser; the server provisions an API key on webhook\nand makes it available for retrieval via /billing/cli/poll/{code}.",
        "operationId": "billing_cli_start_billing_cli_start_post",
        "parameters": [
          {
            "in": "query",
            "name": "tier",
            "required": false,
            "schema": {
              "default": "beta",
              "title": "Tier",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Billing Cli Start"
      }
    },
    "/billing/portal": {
      "post": {
        "description": "Create a Stripe Billing Portal session for the authenticated API key.\n\nRequires Firestore customer mapping (OSCILLINK_CUSTOMERS_COLLECTION) and STRIPE_SECRET_KEY.\nReturns a URL to redirect the user for managing/cancelling their subscription.",
        "operationId": "create_billing_portal_billing_portal_post",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create Billing Portal"
      }
    },
    "/billing/stripe/webhook": {
      "post": {
        "operationId": "stripe_webhook_billing_stripe_webhook_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Stripe Webhook"
      }
    },
    "/billing/success": {
      "get": {
        "description": "Stripe Checkout success landing page.",
        "operationId": "billing_success_billing_success_get",
        "parameters": [
          {
            "in": "query",
            "name": "session_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Billing Success"
      }
    },
    "/health": {
      "get": {
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Health"
      }
    },
    "/license/status": {
      "get": {
        "description": "Report licensed-container status based on exported entitlements.\n\nBehavior:\n- Reads entitlements JSON written by entrypoint verifier.\n- Returns {status: ok, exp, iss, sub, tier} if present and not expired.\n- If expired or missing:\n  - When OSCILLINK_LICENSE_REQUIRED=1|true|on, return 503 to fail readiness.\n  - Otherwise return 200 with status \"stale\" or \"unknown\".",
        "operationId": "license_status_license_status_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "License Status"
      }
    },
    "/metrics": {
      "get": {
        "operationId": "metrics_metrics_get",
        "parameters": [
          {
            "in": "header",
            "name": "x-admin-secret",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Secret"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Metrics"
      }
    },
    "/stripe/webhook": {
      "post": {
        "description": "Handle Stripe webhooks with idempotency and minimal verification semantics.\n\nGoals:\n- Accept raw JSON payloads (no Stripe SDK required for tests/local)\n- Idempotent by event id; duplicates short-circuit\n- Compute payload_sha256 on first process\n- Update in-memory keystore on subscription create/update/delete\n- Respect OSCILLINK_ALLOW_UNVERIFIED_STRIPE with STRIPE_WEBHOOK_SECRET present\n- Return flags {verified, allow_unverified_override} for transparency",
        "operationId": "stripe_webhook_stripe_webhook_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Stripe Webhook"
      }
    },
    "/v1/autocorrect": {
      "post": {
        "operationId": "autocorrect_v1_autocorrect_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoCorrectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoCorrectResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Autocorrect"
      }
    },
    "/v1/bench/competitor": {
      "post": {
        "operationId": "competitor_benchmark_v1_bench_competitor_post",
        "parameters": [
          {
            "in": "query",
            "name": "x_api_key",
            "required": false,
            "schema": {
              "title": "X Api Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompetitorBenchPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Competitor Benchmark"
      }
    },
    "/v1/bundle": {
      "post": {
        "description": "Return only the bundle (requires options.bundle_k).",
        "operationId": "bundle_v1_bundle_post",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Bundle"
      }
    },
    "/v1/chain/receipt": {
      "post": {
        "description": "Return settle plus chain receipt (requires chain).",
        "operationId": "chain_receipt_v1_chain_receipt_post",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Chain Receipt"
      }
    },
    "/v1/ingest": {
      "post": {
        "operationId": "api_ingest_v1_ingest_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-License-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-License-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_api_ingest_v1_ingest_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Api Ingest V1 Ingest Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Ingest",
        "tags": [
          "ingest"
        ]
      }
    },
    "/v1/jobs/settle": {
      "post": {
        "operationId": "submit_job_v1_jobs_settle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Submit Job"
      }
    },
    "/v1/jobs/{job_id}": {
      "delete": {
        "operationId": "cancel_job_v1_jobs__job_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Cancel Job"
      },
      "get": {
        "operationId": "get_job_v1_jobs__job_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Job"
      }
    },
    "/v1/query": {
      "post": {
        "operationId": "api_query_v1_query_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-License-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-License-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_api_query_v1_query_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Api Query V1 Query Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Query",
        "tags": [
          "ingest"
        ]
      }
    },
    "/v1/receipt": {
      "post": {
        "description": "Return only the receipt (always include_receipt).",
        "operationId": "receipt_v1_receipt_post",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Receipt"
      }
    },
    "/v1/settle": {
      "post": {
        "operationId": "settle_v1_settle_post",
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Settle"
      }
    }
  }
}